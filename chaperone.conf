settings: {
  env_set: {

# TCP port number to listen on (default: 11211)
   _TCP_PORT: "${MEMCACHED_TCP_PORT:+-p ${MEMCACHED_TCP_PORT}}",

# UDP port number to listen on (default: 0)
   _UDP_PORT: "${MEMCACHED_UDP_PORT:+-U ${MEMCACHED_UDP_PORT}}",

# Access mask for UNIX socket, in octal (default: 0700)
   _SOCKET_MASK: "${MEMCACHED__SOCKET_MASK:+-a ${MEMCACHED_SOCKET_MASK}}",

# Interface to listen on (default: INADDR_ANY, all addresses)
   _INTERFACE: "${MEMCACHED_INTERFACE:+-l ${MEMCACHED_INTERFACE}}",

# Max memory to use for items in megabytes (default: 64 MB)
   _MEMORY: "${MEMCACHED_MEMORY:+-m ${MEMCACHED_MEMORY}}",

# Return error on memory exhausted (rather than removing items)
   _MEMORY_EXHAUSTED: "${MEMCACHED_MEMORY_EXHAUSTED:+-M ${MEMCACHED_MEMORY_EXHAUSTED}}",

# Max simultaneous connections (default: 1024)
   _CONNECTIONS: "${MEMCACHED_CONNECTIONS:+-c ${MEMCACHED_CONNECTIONS}}",

# Lock down all paged memory
   _LOCK_PAGED_MEMORY: "${MEMCACHED_LOCK_PAGED_MEMORY:+-k ${MEMCACHED_LOCK_PAGED_MEMORY}}",

# Verbose (print errors/warnings while in event loop)
   _VERBOSE: "${MEMCACHED_VERBOSE:+-v ${MEMCACHED_VERBOSE}}",

# Save PID in <file>, only used with -d option
   _PID_FILE: "${MEMCACHED_PID_FILE:+-P ${MEMCACHED_PID_FILE}}",

# Number of threads to use (default: 4)
   _THREADS: "${MEMCACHED_THREADS:+-t ${MEMCACHED_THREADS}}",

# Chunk size growth factor (default: 1.25)
   _FACTOR: "${MEMCACHED_FACTOR:+-f ${MEMCACHED_FACTOR}}",

# Minimum space allocated for key+value+flags (default: 48)
   _KEY_VALUE_FLAGS_SPACE: "${MEMCACHED_KEY_VALUE_FLAGS_SPACE:+-n ${MEMCACHED_KEY_VALUE_FLAGS_SPACE}}",

# Try to use large memory pages (if available)
   _LARGE_MEMORY_PAGES: "${MEMCACHED_LARGE_MEMORY_PAGES:+-L ${MEMCACHED_LARGE_MEMORY_PAGES}}",

# The delimiter between key prefixes and IDs.
   _DELIMITER: "${MEMCACHED_DELIMITER:+-D ${MEMCACHED_DELIMITER}}",

# Maximum number of requests per event
   _MAX_REQUESTS_PER_EVENT: "${MEMCACHED_MAX_REQUESTS_PER_EVENT:+-R ${MEMCACHED_MAX_REQUESTS_PER_EVENT}}",

# Disable use of CAS
   _DISABLE_CAS: "${MEMCACHED_DISABLE_CAS:+-C ${MEMCACHED_DISABLE_CAS}}",

# Set the backlog queue limit (default: 1024)
   _BACKLOG_QUEUE_LIMIT: "${MEMCACHED_BACKLOG_QUEUE_LIMIT:+-b ${MEMCACHED_BACKLOG_QUEUE_LIMIT}}",

# Binding protocol - one of ascii, binary, or auto (default)
   _BIND_PROTOCOL: "${MEMCACHED_BIND_PROTOCOL:+-B {MEMCACHED_BIND_PROTOCOL}}",

# Override the size of each slab page. Adjusts max item size (default: 1mb, min: 1k, max: 128m)
   _SLAB_PAGE_SIZE: "${MEMCACHED_SLAB_PAGE_SIZE:+-I ${MEMCACHED_SLAB_PAGE_SIZE}}",

# Run as a demon
   _DAEMON: "${MEMCACHED_DAEMON:+-d ${MEMCACHED_DAEMON}}",

PARAMS: "${_TCP_PORT} ${_UDP_PORT} ${_SOCKET_MASK} ${_INTERFACE} ${_MEMORY} ${_MEMORY_EXHAUSTED} ${_CONNECTIONS} ${_LOCK_PAGED_MEMORY} ${_VERBOSE} ${_PID_FILE} ${_THREADS} ${_FACTOR} ${_KEY_VALUE_FLAGS_SPACE} ${_LARGE_MEMORY_PAGES} ${_DELIMITER} ${_MAX_REQUESTS_PER_EVENT} ${_DISABLE_CAS} ${_BACKLOG_QUEUE_LIMIT} ${_BIND_PROTOCOL} ${_SLAB_PAGE_SIZE} ${_DAEMON}"

  }
}

memcached.service: {
  command: "/usr/local/bin/memcached",
  service_groups: INIT,
  restart: true,
  stdout: inherit,
  stderr: inherit,
}

memcachedparameters.service: {
  type: oneshot,
  command: "echo ${PARAMS}",
  restart: true,
  stdout: inherit,
  stderr: inherit,
}

